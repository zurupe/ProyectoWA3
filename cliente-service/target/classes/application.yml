# Configuración del Cliente Service
server:
  port: 8082

spring:
  application:
    name: cliente-service
  
  # Configuración PostgreSQL Database
  datasource:
    url: jdbc:postgresql://localhost:5433/cliente_db
    username: cliente_user
    password: cliente_pass
    driver-class-name: org.postgresql.Driver
    
  # Configuración JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    
  # Configuración OAuth2 Resource Server
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/oauth2/jwks

# Configuración de logging
logging:
  level:
    com.proyecto.clienteservice: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Configuración de Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Configuración de OpenAPI/Swagger
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    
---

# Perfil para Docker
spring:
  config:
    activate:
      on-profile: docker
      
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres-db:5432/cliente_db}
    username: ${DATABASE_USERNAME:cliente_user}
    password: ${DATABASE_PASSWORD:cliente_pass}
    
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTH_SERVICE_URL:http://auth-service:8081}/oauth2/jwks

server:
  port: ${SERVER_PORT:8082}
