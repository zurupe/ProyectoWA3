# Configuración por defecto (desarrollo local)
server:
  port: 8081

spring:
  application:
    name: auth-service

  # Configuración de base de datos PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5433/auth_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  # Configuración JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: true

  # Configuración de seguridad
  security:
    oauth2:
      authorizationserver:
        issuer: http://localhost:8081

# Configuración de logging
logging:
  level:
    com.proyecto.authservice: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Configuración de información de la aplicación
info:
  app:
    name: Auth Service
    description: Microservicio de autenticación OAuth2 para el sistema de seguimiento de pedidos
    version: 1.0.0

# Configuración de actuator para monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

---
# Configuración para perfil Docker
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres-db:5432/auth_db
    username: postgres
    password: postgres

  security:
    oauth2:
      authorizationserver:
        issuer: http://auth-service:8081

# Configuración de logging para Docker (menos verbose)
logging:
  level:
    com.proyecto.authservice: INFO
    org.springframework.security: WARN
    org.springframework.security.oauth2: WARN
    org.springframework.web: WARN

---
# Configuración para perfil de pruebas
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop #update?
    show-sql: false

  security:
    oauth2:
      authorizationserver:
        issuer: http://localhost:8081

logging:
  level:
    com.proyecto.authservice: WARN
